name: Backend CD - Deploy to EC2

on:
  push:
    paths:
      - 'backend/**'
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs: 
  backend-cd:
    name: backend-cd-deploy-to-ec2 
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters '{"commands":["cd /path/to/your/app","git pull origin main","go mod tidy","pkill app || true","go build -o app","nohup ./app > app.log 2>&1 &"]}' \
            --output text

      - name: Check Command Status
        run: |
          COMMAND_ID=$(aws ssm list-commands \
            --filters Key=Status,Value=Pending Key=Status,Value=InProgress \
            --query 'Commands[0].CommandId' --output text)
          
          while true; do
            STATUS=$(aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
              --query 'Status' --output text)
            
            if [ "$STATUS" = "Success" ]; then
              echo "Deployment successful!"
              break
            elif [ "$STATUS" = "Failed" ] || [ "$STATUS" = "Cancelled" ] || [ "$STATUS" = "TimedOut" ]; then
              echo "Deployment failed with status: $STATUS"
              exit 1
            fi
            
            echo "Waiting for deployment to complete... Current status: $STATUS"
            sleep 10
          done
