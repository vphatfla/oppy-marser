name: Terraform CD

on:
  push:
    paths:
      - 'terraform/**'
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs: 
  terraform-cd:
    name: Terraform CD
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Terraform Format
        id: fmt
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ./terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -no-color -out=tfplan
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Create Deployment Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ steps.apply.outcome }}' === 'success' ? '✅ deployed' : '❌ failed';
            const sha = context.sha.substring(0, 7);
      
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `Infrastructure deployment ${status} for ${sha}`
            });
